type Mutation{
	createStudent(studentId: ID! firstName: String! lastName: String! email: String! major: MajorInput! campus: CampusInput): ResponseStudent
	updateStudent(studentId: ID! firstName: String! lastName: String! email: String! major: MajorInput! campus: CampusInput): ResponseStudent
	deleteStudent(studentId: ID!): Boolean
	createMajor(name: String! numOfSemesters: Int! area: AreasOfMajors!): ResponseMajor
	updateMajor(name: String! numOfSemesters: Int! area: AreasOfMajors!): ResponseMajor
	createCampus(name: String! abbreviation: String! address: String!): ResponseCampus
	updateCampus(name: String! abbreviation: String! address: String!): ResponseCampus
	createUser(username: ID! password: String! email: String! role: TypeUsers! firstName: String! lastName: String!): ResponseUser
	updateUser(username: ID! password: String! email: String! role: TypeUsers! firstName: String! lastName: String!): ResponseUser
}

input UsersInput{
	username: ID!
	password: String!
}

input MajorInput{
	majorId: ID
	name: String!
	numOfSemesters: Int!
	area: AreasOfMajors!
}

input CampusInput{
	campusId: ID
	name: String!
	abbreviation: String!
	address: String!
}